version: '3'
services:
    zookeeper1:
        build: ./zookeeper
        image: "myzookeeper"
        container_name: "zookeeper1"
        ports:
            - "2001:2181"
        environment:
            ZOOKEEPER_MYID: 1
        volumes:
            - ./zookeeper/zoo.cfg:/home/zookeeper/apache-zookeeper-3.6.2-bin/conf/zoo.cfg
    zookeeper2:
        build: ./zookeeper
        image: "myzookeeper"
        container_name: "zookeeper2"
        ports:
            - "2002:2181"
        environment:
            ZOOKEEPER_MYID: 2
        volumes:
            - ./zookeeper/zoo.cfg:/home/zookeeper/apache-zookeeper-3.6.2-bin/conf/zoo.cfg
    zookeeper3:
        build: ./zookeeper
        image: "myzookeeper"
        container_name: "zookeeper3"
        ports:
            - "2003:2181"
        environment:
            ZOOKEEPER_MYID: 3
        volumes:
            - ./zookeeper/zoo.cfg:/home/zookeeper/apache-zookeeper-3.6.2-bin/conf/zoo.cfg
    broker1:
        build: ./kafkabroker
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        image: "mykafka"
        container_name: "broker1"
        ports:
            - "9001:9092"
        volumes:
            - ./kafkabroker/server1.properties:/home/kafka/kafka_2.13-2.6.0/config/server.properties
        hostname: "broker1"

        # メモリが足らなくなってきたのでクラスタリングは一時停止
    broker2:
        build: ./kafkabroker
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        image: "mykafka"
        container_name: "broker2"
        ports:
            - "9002:9092"
        volumes:
            - ./kafkabroker/server2.properties:/home/kafka/kafka_2.13-2.6.0/config/server.properties
        hostname: "broker2"

    broker3:
        build: ./kafkabroker
        depends_on:
            - zookeeper1
            - zookeeper2
            - zookeeper3
        image: "mykafka"
        container_name: "broker3"
        ports:
            - "9003:9092"
        volumes:
            - ./kafkabroker/server3.properties:/home/kafka/kafka_2.13-2.6.0/config/server.properties
        hostname: "broker3"

    kafka_proxy:
        build: ./confluent
        depends_on:
            - broker1
            - broker2
            - broker3
        image: "myconfluent"
        container_name: "kafka_proxy"
        ports:
            - "8082:8082"
        volumes:
            - ./confluent/kafka-rest.properties:/home/confluent/confluent-6.0.0/etc/kafka-rest/kafka-rest.properties
        command: ["kafka-rest-start","/home/confluent/confluent-6.0.0/etc/kafka-rest/kafka-rest.properties"]

    kafka_connector1:
        build: ./kafkabroker
        depends_on:
            - broker1
            #- broker2
            #- broker3
        image: "mykafka"
        container_name: "kafka_connector1"
        ports:
            - "8083:8083"
        volumes:
            - ./kafkaconnector/connect-distributed.properties:/home/kafka/kafka_2.13-2.6.0/config/connect-distributed.properties
            - ./kafkaconnector/connector_plugins/lib:/home/kafka/connector_plugins/lib
            - ./kafkaconnector/connector_plugins/etc:/home/kafka/connector_plugins/etc
        command: ["connect-distributed.sh","/home/kafka/kafka_2.13-2.6.0/config/connect-distributed.properties","/home/kafka/connector_plugins/etc/quickstart-elasticsearch.properties"]

        # メモリが足らなくなってきたのでクラスタリングは一時停止
        #    kafka_connector2:
        #        depends_on:
        #            - broker1
        #            - broker2
        #            - broker3
        #        image: "mykafka"
        #        container_name: "kafka_connector2"
        #        ports:
        #            - "8084:8083"
        #        volumes:
        #            - ./kafkaconnector/connect-distributed.properties:/home/kafka/kafka_2.13-2.6.0/config/connect-distributed.properties
        #            - ./kafkaconnector/connector_plugins/lib:/home/kafka/connector_plugins/lib
        #            - ./kafkaconnector/connector_plugins/etc:/home/kafka/connector_plugins/etc
        #        command: ["connect-distributed.sh","/home/kafka/kafka_2.13-2.6.0/config/connect-distributed.properties","/home/kafka/connector_plugins/etc/quickstart-elasticsearch.properties"]
        #
    elasticsearch1:
        # HOST側の変更設定が必要(65530 から262144へ増加)
        # sudo sysctl -w vm.max_map_count = 262144
        #
        build: ./elasticsearch
        image: "myelasticsearch"
        container_name: "elasticsearch1"
        ports:
            - "9200:9200"
            - "9300:9300"
        volumes:
            - ./elasticsearch/jvm.options:/home/elasticsearch/elasticsearch-7.9.2/config/jvm.options
            - ./elasticsearch/elasticsearch1.yml:/home/elasticsearch/elasticsearch-7.9.2/config/elasticsearch.yml
        command: ["elasticsearch"]
    elasticsearch2:
        # HOST側の変更設定が必要(65530 から262144へ増加)
        # sudo sysctl -w vm.max_map_count = 262144
        #
        build: ./elasticsearch
        image: "myelasticsearch"
        container_name: "elasticsearch2"
        depends_on:
            - elasticsearch1
        ports:
            - "9201:9200"
            - "9301:9300"
        volumes:
            - ./elasticsearch/jvm.options:/home/elasticsearch/elasticsearch-7.9.2/config/jvm.options
            - ./elasticsearch/elasticsearch2.yml:/home/elasticsearch/elasticsearch-7.9.2/config/elasticsearch.yml
        command: ["elasticsearch"]

    kibana:
        build: ./kibana
        image: "mykibana"
        container_name: "kibana"
        ports:
            - "5601:5601"
        volumes:
            - ./kibana/kibana.yml:/home/kibana/kibana-7.9.3-linux-x86_64/config/kibana.yml
        command: ["kibana"]
